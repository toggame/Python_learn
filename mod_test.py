print("5%3的值为：", 5 % 3)  # 2
print("5%3.0的值为：", 5 % 3.0)  # 2.0
print("5.0%3的值为：", 5.0 % 3)  # 2.0 有一个浮点，结果也为浮点
print("5.2%3.1的值为：", 5.2 % 3.1)  # 2.1
print("5.2/3.1的值为：", 5.2 / 3.1)  # 1.6774193548387097
print("-5.2%-3.1的值为：", -5.2 % -3.1)  # -2.1
print("-5.2/-3.1的值为：", -5.2 / -3.1)  # 1.6774193548387097
print("5.2%-3.1的值为：", 5.2 % -3.1)  # -1.0 负值结果为-
print("5.2/-3.1的值为：", 5.2 / -3.1)  # -1.6774193548387097
print("-5.2%3.1的值为：", -5.2 % 3.1)  # 1.0
print("5.2%-4.1的值为：", 5.2 % -4.1)  # -2.999999999999999 因浮点的存储机制，会掉精度，符号相异，结果为-，向上截取
print("-5.2%4.1的值为：", -5.2 % 4.1)  # 2.999999999999999 因浮点的存储机制，会掉精度
print("-5.2%-4.1的值为：", -5.2 % -4.1)  # -1.1000000000000005 因浮点的存储机制，会掉精度，符号相同，结果为+，向下截取
print("5.2%4.1的值为：", 5.2 % 4.1)  # 1.1000000000000005 因浮点的存储机制，会掉精度
print("5.2%-2.9的值为：", 5.2 % -2.9)  # -0.5999999999999996 因浮点的存储机制，会掉精度
print("5.2%-1.5的值为：", 5.2 % -1.5)  # -0.7999999999999998 因浮点的存储机制，会掉精度

print('5的2次方：', 5 ** 2)  # 25
print('4的3次方：', 4 ** 3)  # 64
print('4的平方根', 4 ** 0.5)  # 2.0，会转为浮点
print(type(4 ** 0.5))
print('27的立方根：', 27 ** (1/3))  # 3.0，会转为浮点
print(type(27 ** (1/3)))
